// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 工地信息
model PlaceInfo {
  id              Int      @id @default(autoincrement())
  place_id        String   @unique
  place_name      String   @default("")
  place_type      String   @default("")
  place_address   String   @default("")
  extra_info_json Json     @map("extra_info_json")
  createdAt       DateTime @default(now())
}

// 用户信息
model User {
  id          Int      @id @default(autoincrement())
  uid         String   @unique
  phoneNumber String   @unique // 早期打算用手机号,但主要做帐号id
  password    String // 存储加密后的密码
  role        Int      @default(1)
  enable      Boolean  @default(true)
  place_id    String   @default("")
  createdAt   DateTime @default(now())
  user_name   String   @default("塔吊员")
  identity_id String   @default("") // 身份ID，对应AccessIdentity表的identity_id
}

// 算法信息
model AlgorithmInfo {
  id              Int      @id @default(autoincrement())
  algorithm_id    String   @unique
  name            String   @unique
  description     String
  map_name        String
  place_id        String   @default("")
  status          String   @default("idle")
  createdAt       DateTime @default(now())
  center_point    String   @default("")
  algorithm_type  String   @default("1") // 1: 平头塔吊 2: 动臂塔吊
  extra_info_json Json     @map("extra_info_json")
}

// 算法用户关系 一个用户可以关联多个算法
model AlgorithmUserRelation {
  id           Int      @id @default(autoincrement())
  relation_id  String   @unique
  user_id      String
  algorithm_id String
  createdAt    DateTime @default(now())
}

model Admin {
  id        Int      @id @default(autoincrement())
  uid       String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model MapInfo {
  id             Int      @id @default(autoincrement())
  map_id         String   @unique
  tower_crane_id String
  version        Int      @default(0)
  createdAt      DateTime @default(now())
  map_url        String   @default("")
  isUsed         Boolean  @default(false)
  pointCloud_url String   @default("")
}

// 权限身份
model AccessIdentity {
  id              Int      @id @default(autoincrement())
  identity_id     String   @unique // 身份id
  identity_name   String   @default("") // 身份名称
  identity_value  String   @default("") // 拥有的权限，用逗号分隔
  createdAt       DateTime @default(now())
  extra_info_json Json     @map("extra_info_json") // 额外信息
}

// 权限树 权限子项
model AccessTree {
  id              Int      @id @default(autoincrement())
  access_name     String   @default("") // 权限名称
  access_id       String   @unique // 权限id
  access_priority Int      @default(1) // 权限优先级 
  access_status   String   @default("0") // 0: 未使用 1: 已使用
  createdAt       DateTime @default(now())
  parent_id       String   @default("") // 父级id 用逗号分隔
  child_id        String   @default("") // 子级id 用逗号分隔
  extra_info_json Json     @map("extra_info_json") // 额外信息
}
